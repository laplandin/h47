type Query {
    courses: [Course!]!
    course(id: ID!): Course
    users: [User!]
    user(id: ID!): User
    chapters(courseId: ID!): [Chapter!]!
    chapter(courseId: ID!, chapterId: String!): Chapter
}

type User {
    id: ID!
    email: String!
    role: Role
    ecoindex: Int
    enrolledTo: [Course]
    startedCourses: [Course]
    currentCourse: Course
    profile: Profile
}

type Profile {
    phone: String
    firstName: String
    lastName: String
    address: String
    country: String
    region: String
    city: String
}

enum Role {
    ADMIN
    USER
}

type Course {
    id: ID!
    title: String!
    description: String
    enrolledUsers: Int
    chapters: [Chapter]
    coverImage: String
    level: Int
    duration: Int
    tag: String
}

type Chapter {
    id: ID!
    title: String
    chapterType: String
    content: String
    done: Boolean
    course: Course
    duration: Int
}
